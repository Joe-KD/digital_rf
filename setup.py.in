# ----------------------------------------------------------------------------
# Copyright (c) 2017 Massachusetts Institute of Technology (MIT)
# All rights reserved.
#
# Distributed under the terms of the BSD 3-clause license.
#
# The full license is in the LICENSE file, distributed with this software.
# ----------------------------------------------------------------------------
"""Setup file for the digital_rf package."""
from setuptools import setup, Extension
import os
import numpy
# to use a consistent encoding
from codecs import open

# Get the long description from the README file
with open('README.rst', encoding='utf-8') as f:
    long_description = f.read()

# read __version__ variable by exec-ing python/_version.py
version = {}
try:
    with open(os.path.join('python', '_version.py')) as fp:
        exec(fp.read(), version)
except IOError:
    version['__version__'] = None

setup(
    name='digital_rf',
    version=version['__version__'],
    description='Python tools to read and write Digital RF data in HDF5 format',
    long_description=long_description,

    url='https://github.com/MITHaystack/digital_rf',

    author='MIT Haystack Observatory',
    author_email='openradar-developers@openradar.org',

    license='BSD-3-Clause',

    classifiers=[
        'Development Status :: 5 - Production/Stable',
        'Environment :: Console',
        'Intended Audience :: Science/Research',
        'License :: OSI Approved :: BSD License',
        'Operating System :: POSIX :: Linux',
        'Programming Language :: C',
        'Programming Language :: Python',
        'Topic :: Scientific/Engineering',
    ],

    keywords='hdf5 radio rf',

    install_requires=['h5py', 'numpy'],
    extras_require={
        'watchdog': ['watchdog'],
    },

    package_dir={
        'digital_rf': 'python',
    },
    packages=['digital_rf'],
    ext_modules=[
        Extension(
            'digital_rf._py_rf_write_hdf5',
            ['lib/py_rf_write_hdf5.c'],
            include_dirs=filter(None, [
                '${CMAKE_CURRENT_BINARY_DIR}/include',
                '${HDF5_INCLUDE_DIRS}',
                numpy.get_include(),
            ]),
            library_dirs=filter(None, [
                '${CMAKE_CURRENT_BINARY_DIR}/lib',
                '${HDF5_LIBRARY_DIR}',
            ]),
            libraries=[
                'digital_rf',
                'hdf5',
            ],
        ),
    ],
    entry_points= {
        'console_scripts': ['drf=digital_rf.drf_command:main'],
    },
    scripts=[
        'tools/digital_metadata_archive.py',
        'tools/digital_rf_archive.py',
        'tools/digital_rf_upconvert.py',
        'tools/drf_cross_sti.py',
        'tools/drf_plot.py',
        'tools/drf_sti.py',
        'tools/drf_sound.py',
        'tools/verify_digital_rf_upconvert.py',
    ],
)

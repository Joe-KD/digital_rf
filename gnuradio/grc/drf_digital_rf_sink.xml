<!--
  Copyright (c) 2017 Massachusetts Institute of Technology (MIT)
  All rights reserved.

  Distributed under the terms of the BSD 3-clause license.

  The full license is in the LICENSE file, distributed with this software.
-->
<block>
  <name>Digital RF Sink</name>
  <key>drf_digital_rf_sink</key>
  <category>Digital RF</category>
  <import>import gr_drf</import>
  <make>\
  gr_drf.digital_rf_sink(
      dir=$dir, sample_size=$input.size,
      subdir_cadence_s=$subdir_cadence_s, file_cadence_ms=$file_cadence_ms,
      sample_rate_numerator=$sample_rate_numerator,
      sample_rate_denominator=$sample_rate_denominator,
      uuid=$uuid, is_complex=$input.complex, num_subchannels=$vlen,
      stop_on_dropped_packet=$stop_on_dropped,
      start_sample_index=None if $start_sample_index=='' else int(eval($start_sample_index)),
      ignore_tags=$ignore_tags,
  )
  </make>
  <param>
    <name>Directory</name>
    <key>dir</key>
    <type>string</type>
  </param>
  <param>
    <name>Input Type</name>
    <key>input</key>
    <value>sc16</value>
    <type>enum</type>
    <hide>part</hide>
    <option>
      <name>Complex int8</name>
      <key>sc8</key>
      <opt>type:sc8</opt>
      <opt>size:2</opt>
      <opt>complex:True</opt>
    </option>
    <option>
      <name>Complex int16</name>
      <key>sc16</key>
      <opt>type:sc16</opt>
      <opt>size:4</opt>
      <opt>complex:True</opt>
    </option>
    <option>
      <name>Complex float32</name>
      <key>fc32</key>
      <opt>type:fc32</opt>
      <opt>size:8</opt>
      <opt>complex:True</opt>
    </option>
    <option>
      <name>Complex float64</name>
      <key>fc64</key>
      <opt>type:fc64</opt>
      <opt>size:16</opt>
      <opt>complex:True</opt>
    </option>
    <option>
      <name>int8</name>
      <key>s8</key>
      <opt>type:s8</opt>
      <opt>size:1</opt>
      <opt>complex:False</opt>
    </option>
    <option>
      <name>int16</name>
      <key>s16</key>
      <opt>type:s16</opt>
      <opt>size:2</opt>
      <opt>complex:False</opt>
    </option>
    <option>
      <name>float32</name>
      <key>f32</key>
      <opt>type:f32</opt>
      <opt>size:4</opt>
      <opt>complex:False</opt>
    </option>
    <option>
      <name>float64</name>
      <key>f64</key>
      <opt>type:f64</opt>
      <opt>size:8</opt>
      <opt>complex:False</opt>
    </option>
  </param>
  <param>
    <name>Vector Length</name>
    <key>vlen</key>
    <value>1</value>
    <type>int</type>
    <hide>part</hide>
  </param>
  <param>
    <name>Subdir Cadence (s)</name>
    <key>subdir_cadence_s</key>
    <value>3600</value>
    <type>int</type>
    <hide>part</hide>
  </param>
  <param>
    <name>File Cadence (ms)</name>
    <key>file_cadence_ms</key>
    <value>1000</value>
    <type>int</type>
    <hide>part</hide>
  </param>
  <param>
    <name>Sample rate (num)</name>
    <key>sample_rate_numerator</key>
    <value>int(samp_rate)</value>
    <type>int</type>
  </param>
  <param>
    <name>Sample rate (den)</name>
    <key>sample_rate_denominator</key>
    <value>1</value>
    <type>int</type>
  </param>
  <param>
    <name>UUID</name>
    <key>uuid</key>
    <value>THIS_UUID_LACKS_ENTROPY</value>
    <type>string</type>
    <hide>#if $uuid() then 'none' else 'part'#</hide>
  </param>
  <param>
    <name>Start Index</name>
    <key>start_sample_index</key>
    <value></value>
    <type>string</type>
    <hide>#if $start_sample_index() then 'none' else 'part'#</hide>
  </param>
  <param>
    <name>Ignore Tags</name>
    <key>ignore_tags</key>
    <value>False</value>
    <type>bool</type>
    <hide>#if $ignore_tags() then 'none' else 'part'#</hide>
    <option>
      <name>Yes</name>
      <key>True</key>
    </option>
    <option>
      <name>No</name>
      <key>False</key>
    </option>
  </param>
  <param>
    <name>Stop on Drop</name>
    <key>stop_on_dropped</key>
    <value>False</value>
    <type>bool</type>
    <hide>#if $stop_on_dropped() then 'none' else 'part'#</hide>
    <option>
      <name>Yes</name>
      <key>True</key>
    </option>
    <option>
      <name>No</name>
      <key>False</key>
    </option>
  </param>

  <check>$vlen > 0</check>
  <check>$subdir_cadence_s > 0</check>
  <check>$file_cadence_ms > 0</check>
  <check>$subdir_cadence_s*1000 % $file_cadence_ms == 0</check>
  <check>$sample_rate_numerator > 0</check>
  <check>$sample_rate_denominator > 0</check>
  <check>$start_sample_index == '' or int(eval($start_sample_index)) >= 0</check>

  <sink>
    <name>in</name>
    <type>$input.type</type>
    <vlen>$vlen</vlen>
  </sink>

  <doc>
Write data in Digital RF format.

An 'rx_time' stream tag is used to indicate the sample time whenever a break in the input data occurs, including for the first sample. The tag value takes the form of a Unix time (secs, frac) tuple where 'secs' is the integer seconds since the epoch and 'frac' is the float fractional seconds since the whole second. UHD data is tagged in this way by default.

- Directory --- Directory to write to.
- Input Type --- Size and type of the input samples.
- Vector Length --- Vector length of the input. Each sample of the vector will be written to a different subchannel.
- Subdir Cadence (s) --- Number of seconds of data per subdirectory.
- File Cadence (ms) --- Number of milliseconds of data per file.
- Sample rate (num) --- Number of samples per second, numerator part.
- Sample rate (den) --- Number of samples per second, denominator part.
- UUID --- Unique ID to associate with this data, for pairing metadata.
- Start Index --- Index in samples since epoch for first sample.
- Ignore Tags --- If True, do not use rx_time tag to set sample index.
- Stop on Drop --- If True, stop when a packet is dropped.
  </doc>
</block>
